openapi: 3.0.0
info:
  title: Movie API
  description: Movie API
  version: 1.0.0
tags:
  - name: Movie
    description: Movie API
servers:
  - url: http://localhost:8080

paths:
  /data/movies:
    get:
      tags:
        - Movie
      summary: Get all movies
      description: Get all movies
      operationId: getMovies
      parameters:
        - in: query
          name: sort
          schema:
            type: string
          required: false
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/MovieResponse'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    post:
      tags:
        - Movie
      summary: Create a single movie
      operationId: createMovie
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MovieCreateRequest'
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MovieResponse'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /data/movies/{id}:
    get:
      tags:
        - Movie
      summary: Get a movie by ID
      description: Get a movie by ID
      operationId: getMovie
      parameters:
        - name: id
          in: path
          required: true
          description: ID of the movie to get
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MovieResponse'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    put:
      tags:
        - Movie
      summary: Edit a movie by ID
      description: Edit a movie by ID
      operationId: updateMovie
      parameters:
        - name: id
          in: path
          required: true
          description: ID of the movie to edit
          schema:
            type: integer
            format: int64
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MovieUpdateRequest'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MovieResponse'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    delete:
      tags:
        - Movie
      summary: Delete a movie by ID
      description: Delete a movie by ID
      operationId: deleteMovie
      parameters:
        - name: id
          in: path
          required: true
          description: ID of the movie to edit
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MovieIdResponse'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
components:
  schemas:
    MovieResponse:
      type: object
      properties:
        id:
          type: integer
          format: int64
          example: 1
        title:
          type: string
          example: Inception
        description:
          type: string
          example: A very long description
        releaseDate:
            type: string
            format: date
            example: 2010-07-16
        duration:
          type: integer
          format: int32
          example: 148
        rating:
          type: number
          format: double
          example: 9.9
        genre:
          $ref: '#/components/schemas/MovieGenre'
        language:
          type: string
          example: English
        director:
          $ref: '#/components/schemas/DirectorResponse'
    MovieCreateRequest:
      type: object
      required:
        - title
        - description
        - releaseDate
        - duration
        - genre
        - director
        - language
      properties:
        title:
          type: string
          example: Inception
        description:
          type: string
          example: A thief who steals corporate secrets through the use of dream-sharing technology.
        releaseDate:
          type: string
          format: date
          example: 2010-07-16
        rating:
          type: number
          format: double
          example: 8.8
        duration:
          type: integer
          format: int32
          example: 148
        genre:
          $ref: '#/components/schemas/MovieGenre'
        director:
          $ref: '#/components/schemas/DirectorRequest'
        language:
          type: string
          example: English
    MovieUpdateRequest:
      type: object
      properties:
        title:
          type: string
          example: Inception
        description:
          type: string
          example: A thief who steals corporate secrets through the use of dream-sharing technology.
        releaseDate:
          type: string
          format: date
          example: 2010-07-16
        rating:
          type: number
          format: double
          example: 8.8
        duration:
          type: integer
          format: int32
          example: 148
        genre:
          $ref: '#/components/schemas/MovieGenre'
        language:
          type: string
          example: English
    DirectorRequest:
      type: object
      required:
        - firstName
        - lastName
        - birthDate
      properties:
        firstName:
          type: string
          example: Christopher
        lastName:
          type: string
          example: Nolan
        birthDate:
          type: string
          format: date
    DirectorResponse:
      type: object
      properties:
        firstName:
          type: string
        lastName:
          type: string
    MovieIdResponse:
      type: object
      properties:
        id:
          type: integer
          format: int64
    ErrorResponse:
      type: object
      properties:
        timestamp:
          type: string
          format: date-time
        status:
          type: integer
        error:
          type: string
        message:
          type: string
    MovieStatus:
      type: string
      enum:
        - AVAILABLE
        - UNAVAILABLE
    MovieGenre:
        type: string
        enum:
            - ACTION
            - COMEDY
            - DRAMA
            - HORROR
            - SCIFI
            - ROMANCE